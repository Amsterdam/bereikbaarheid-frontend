suite: Deployments
release:
  name: test
templates:
  - deployment.yaml
tests:

  - it: should use secrets defined on container level
    set:
      image:
        repository: defaultrepo
      secrets:
        my-secret:
          type: opaque
          secrets:
            secret1: value1
            secret2: value2
        kv-secret:
          type: keyvault
          secrets:
            - secret-key
      deployments:
        main:
          containers:
            - name: main
              secrets:
                - my-secret
                - kv-secret
    asserts: &asserts
      - equal:
          path: spec.template.spec.containers[?(@.name=='main')].env
          value:
            - name: "SECRET1"
              valueFrom:
                secretKeyRef:
                  name: "my-secret-test"
                  key: "secret1"
            - name: "SECRET2"
              valueFrom:
                secretKeyRef:
                  name: "my-secret-test"
                  key: "secret2"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: secret-key
                  name: kv-secret-test

      - equal:
          path: spec.template.spec.containers[?(@.name=='main')].volumeMounts
          value:
            - mountPath: /mnt/secrets/my-secret
              name: my-secret
              readOnly: true
            - mountPath: /mnt/secrets/kv-secret
              name: kv-secret
              readOnly: true
      - equal:
          path: spec.template.spec.volumes
          value:
            - name: my-secret
              secret:
                secretName: my-secret-test
            - csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: kv-secret-test
              name: kv-secret

  - it: should use secrets defined on deployment level
    set:
      image:
        repository: defaultrepo
      secrets:
        my-secret:
          type: opaque
          secrets:
            secret1: value1
            secret2: value2
        kv-secret:
          type: keyvault
          secrets:
            - secret-key
      deployments:
        main:
          secrets:
            - my-secret
            - kv-secret
          containers:
            - name: main
    asserts: *asserts

  - it: should give an error if the reference to a secret does not exist
    set:
      image:
        repository: defaultrepo
      deployments:
        main:
          containers:
            - name: main
              secrets:
                - mysecret
    asserts:
      - failedTemplate:
          errorMessage: "Secret mysecret does not exist"
